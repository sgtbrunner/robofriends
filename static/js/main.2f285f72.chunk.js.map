{"version":3,"sources":["components/card.js","components/cardlist.js","components/searchbox.js","components/scroll.js","containers/App.js","index.js"],"names":["Card","_ref","name","email","react_default","a","createElement","className","alt","src","concat","Cardlist","robots","map","user","card","key","id","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","children","App","_this","Object","classCallCheck","this","_super","call","onSearchChange","event","setState","searchField","target","value","state","_this2","fetch","then","response","json","users","_this3","filteredRobots","filter","robot","toLowerCase","includes","length","searchbox","components_scroll","cardlist","Component","ReactDOM","render","src_containers_App","document","getElementById"],"mappings":"0MAYgBA,EAVH,SAAAC,GAAmB,IAAjBC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,MACnB,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,oDAChBH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,QAAQC,IAAG,wBAAAC,OAA0BR,KAC9CE,EAAAC,EAAAC,cAAA,UAAKJ,GACLE,EAAAC,EAAAC,cAAA,SAAIH,KCcOQ,EAlBE,SAAAV,GAAc,IAAZW,EAAYX,EAAZW,OAClB,OACCR,EAAAC,EAAAC,cAAA,WAEKM,EAAOC,IAAI,SAACC,GACd,OACCV,EAAAC,EAAAC,cAACS,EAAD,CACAb,KAAMY,EAAKZ,KACXC,MAAOW,EAAKX,MACZa,IAAKF,EAAKG,SCGAC,EAbE,SAAAjB,GAAoB,IAAlBkB,EAAkBlB,EAAlBkB,aACnB,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,SACCC,UAAU,kCACVa,KAAK,SACLC,YAAY,0BACZC,SAAUH,MCCCI,EARA,SAACC,GACf,OACCpB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACfiB,EAAMC,WC6CKC,2DA1Cd,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACbC,EAAAI,EAAAC,KAAAF,OAgBDG,eAAiB,SAACC,GACjBP,EAAKQ,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAhB1CX,EAAKY,MAAQ,CACZ3B,OAAQ,GACRwB,YAAa,IAJDT,kEAWM,IAAAa,EAAAV,KACnBW,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKL,SAAS,CAACvB,OAAQiC,uCAO9B,IAAAC,EAAAhB,KACFiB,EAAiBjB,KAAKS,MAAM3B,OAAOoC,OAAO,SAACC,GAEhD,OAAOA,EAAM/C,KAAKgD,cAAcC,SAASL,EAAKP,MAAMH,YAAYc,iBAE7D,OAAKpB,KAAKS,MAAM3B,OAAOwC,OAInBhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACRH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,eACAH,EAAAC,EAAAC,cAAC+C,EAAD,CAAWlC,aAAcW,KAAKG,iBAC9B7B,EAAAC,EAAAC,cAACgD,EAAD,KACClD,EAAAC,EAAAC,cAACiD,EAAD,CAAU3C,OAAQmC,MAPtB3C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,qBA7BIiD,0BCAlBC,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.2f285f72.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email}) => {\n \treturn (\n \t\t<div className = 'dib br3 pa1 ma2 grow bw2 shadow-5 bg-light-green'>\n \t\t\t<img alt='robot' src={`https://robohash.org/${name}`}/>\n \t\t\t<h2>{name}</h2>\n \t\t\t<p>{email}</p>\n \t\t</div>\n \t)\n };\n\n export default Card;","import React from 'react';\nimport Card from './card';\n\nconst Cardlist = ({robots}) => {\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t    robots.map((user) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card \n\t\t\t\t\t\tname={user.name} \n\t\t\t\t\t\temail={user.email} \n\t\t\t\t\t\tkey={user.id}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t    </div>\n\t);\n}\n\nexport default Cardlist;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n\treturn (\n\t\t\t<div className=\"pa2\">\n\t\t\t<input\n\t\t\t\tclassName=\"pa3 ba b--gray bg-washed-yellow\" \n\t\t\t\ttype=\"search\" \n\t\t\t\tplaceholder=\"find your robot here...\"\n\t\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t\t</div>\n\t);\n }\n\n export default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div className = \"scrollbox\">\n\t\t\t{props.children}\n\t\t</div>\n\t) \n}\n\nexport default Scroll;","import React, {Component} from 'react';\nimport Cardlist from '../components/cardlist';\nimport SearchBox from '../components/searchbox';\nimport Scroll from '../components/scroll'\nimport './App.css';\n\nclass App extends Component {\n\t// STATE DECLARATION\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchField: ''\n\t\t}\n\t}\n\n\t// componentDidMount() IS A LIFECYCLE HOOK THAT RUNS ONCE THE APP COMPONENT IS MOUNTED IN INDEX.HTML.\n\t// IN THIS CASE, IT FETCHES THE USERS FROM THE SERVER DATABASE, CONVERTS THE RESPONSE TO JSON AND \n\t// UPDATES THIS.STATE.ROBOTS WITH THE USERS FETCHED\n\tcomponentDidMount() {\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\n\t\t.then(response => response.json())\n\t\t.then(users => this.setState({robots: users}));\n\t}\n\t// TRIGGERED EVERY TIME THE SEARCHBOX CHANGES\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchField: event.target.value });\n\t}\n\t// RENDER TO INDEX.HTML\n\trender() {\n\t\tconst filteredRobots = this.state.robots.filter((robot) => {\n\t\t// Needs .toLowerCase() on both sides of the declaration to compare input to user.name on the same level\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchField.toLowerCase()); \n\t\t})\n\t    \tif (!this.state.robots.length) {\n\t    \t\treturn <h1 className=\"tc f1\">Loading...</h1> \n\t    \t} else {\n\t      \t\treturn (\n\t      \t\t\t<div className=\"tc \">\n\t      \t        \t<h1 className=\"f2\">RoboFriends</h1>\n\t      \t        \t<SearchBox searchChange={this.onSearchChange}/>\n\t      \t        \t<Scroll>\n\t      \t        \t\t<Cardlist robots={filteredRobots}/>\n\t      \t        \t</Scroll>\n\t      \t      \t</div>\n\t      \t    )\n\t    \t}\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}