{"version":3,"sources":["components/Card/index.js","components/Card/card.component.jsx","components/Cardlist/index.js","components/Cardlist/cardlist.component.jsx","components/ErrorAlert/index.js","components/ErrorAlert/error-alert.component.jsx","components/Loading/index.js","components/Loading/loading.component.jsx","components/Searchbox/searchbox.component.jsx","components/Searchbox/index.js","utils/api.utils.js","App/App.jsx","index.jsx"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","toLowerCase","Cardlist","robots","map","user","components_Card","key","ErrorAlert","Fragment","Loading","style","fontSize","SearchBox","searchChange","type","placeholder","onChange","defaultProps","Searchbox","api_utils","fetch","then","response","ok","json","Error","App","_this","Object","classCallCheck","this","_super","call","_filterRobots","state","filter","robot","includes","searchField","_onSearchChange","event","setState","target","value","error","loading","_this2","api","users","catch","finally","_this$state","AlertMessage","role","components_Cardlist","Component","ReactDOM","render","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.80e18989.chunk.js","sourcesContent":["import Card from './card.component';\n\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Card = ({ name, email, id }) => (\n  <div className=\"dib br3 pa1 ma2 grow bw2 shadow-5 bg-light-green\">\n    <img alt=\"robot\" src={`https://robohash.org/${name + email + id}`} />\n    <h2>{name}</h2>\n    <p>{email.toLowerCase()}</p>\n  </div>\n);\n\nCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default Card;\n","import Cardlist from './cardlist.component';\n\nexport default Cardlist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Card from '../Card';\n\nconst Cardlist = ({ robots }) => (\n  <div>\n    {robots.map((user) => {\n      const { name, email, id } = user;\n      return <Card name={name} email={email} id={id} key={id} />;\n    })}\n  </div>\n);\n\nCardlist.propTypes = {\n  robots: PropTypes.array.isRequired,\n};\n\nexport default Cardlist;\n","import ErrorAlert from './error-alert.component';\n\nexport default ErrorAlert;\n","import React from 'react';\n\nconst ErrorAlert = () => (\n  <>\n    <h1 className=\"t1\">Oooopsss...</h1>\n    <h3>An error occurred. Please try again later!</h3>\n  </>\n);\n\nexport default ErrorAlert;\n","import Loading from './loading.component';\n\nexport default Loading;\n","import React from 'react';\nimport './loading.styles.css';\n\nconst Loading = () => (\n  <h1 className=\"t1 loading\" style={{ fontSize: '4rem' }}>\n    Loading\n  </h1>\n);\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBox = ({ searchChange }) => (\n  <div>\n    <input\n      className=\"pa3 ba b--gray bg-washed-yellow\"\n      type=\"search\"\n      placeholder=\"find your robot here...\"\n      onChange={searchChange}\n    />\n  </div>\n);\n\nSearchBox.propTypes = {\n  searchChange: PropTypes.func,\n};\n\nSearchBox.defaultProps = {\n  searchChange: () => null,\n};\n\nexport default SearchBox;\n","import Searchbox from './searchbox.component';\n\nexport default Searchbox;\n","export const USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\nexport default {\n  getUsers: () =>\n    fetch(USERS_URL).then((response) => {\n      if (response.ok) return response.json();\n      throw new Error('Something went wrong');\n    }),\n};\n","import React, { Component } from 'react';\n\nimport Cardlist from '../components/Cardlist';\nimport ErrorAlert from '../components/ErrorAlert';\nimport Loading from '../components/Loading';\nimport SearchBox from '../components/Searchbox';\nimport api from '../utils/api.utils';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      loading: false,\n      robots: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    api\n      .getUsers()\n      .then((users) => this.setState({ robots: users }))\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  }\n\n  componentWillUnmount() {\n    this.setState = () => {};\n  }\n\n  _filterRobots = () =>\n    this.state.robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\n    });\n\n  _onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  render() {\n    const { error, loading } = this.state;\n    const { _filterRobots, _onSearchChange } = this;\n\n    let AlertMessage = null;\n    if (error) AlertMessage = ErrorAlert;\n    if (loading) AlertMessage = Loading;\n\n    return (\n      <div className=\"tc\">\n        {AlertMessage && (\n          <div role=\"alert\" className=\"alert-container\">\n            <AlertMessage />\n          </div>\n        )}\n        {!AlertMessage && (\n          <div>\n            <h1 className=\"t1\">RoboFriends</h1>\n            <SearchBox searchChange={_onSearchChange} />\n            <div className=\"pv4\">\n              <Cardlist robots={_filterRobots()} />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport './index.css';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}